cmake_minimum_required(VERSION 3.8)
project(classic_vision)

set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

set(exec_name ${PROJECT_NAME}_node)
set(src_dir src/)
set(srcs 
	${src_dir}main.cpp
	${src_dir}VisionNode.cpp)

include_directories(includes)

# find dependencies
find_package(ament_cmake REQUIRED)
find_package(rclcpp REQUIRED)
find_package(std_msgs REQUIRED)
find_package(sensor_msgs REQUIRED)
find_package(cv_bridge REQUIRED)

if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  # the following line skips the linter which checks for copyrights
  # comment the line when a copyright and license is added to all source files
  set(ament_cmake_copyright_FOUND TRUE)
  # the following line skips cpplint (only works in a git repo)
  # comment the line when this package is in a git repo and when
  # a copyright and license is added to all source files
  set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
endif()

add_executable(${exec_name} ${srcs})
ament_target_dependencies(${exec_name} rclcpp std_msgs sensor_msgs cv_bridge)

install(TARGETS ${exec_name} DESTINATION lib/${PROJECT_NAME})
ament_package()
